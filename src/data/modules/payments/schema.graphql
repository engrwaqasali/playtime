
type Query {
    availablePaymentMethods: [PaymentMethod!]!
    availableWithdrawMethods: [WithdrawMethod!]!

    payments: [Payment!]!
    withdraws: [Withdraw!]!

    payedTotal: Float!

    qiwiWithdrawStats: QiwiWithdrawStats!
}

type Mutation {
    doDeposit(amount: Float!, method: ID!): String!
    doWithdraw(amount: Float!, method: ID!, purse: String!): Withdraw!
    cancelWithdraw(id: ID!): Withdraw!

    doQiwiWithdraw(amount: Float!, method: QiwiWithdrawMethod!, purse: QiwiWithdrawPurse!): String!
}

type PaymentMethod {
    id: ID!
    name: String!
    avatar: URL!
    commission: Float!
    minAmount: Float!
    maxAmount: Float!
    enabled: Boolean!
}

type WithdrawMethod {
    id: ID!
    name: String!
    avatar: URL!
    commission: Float!
    minAmount: Float!
    maxAmount: Float!
    enabled: Boolean!
}

enum PaymentStatus {
    IN_PROGRESS, FINISHED
}

type Payment {
    id: ID!
    method: PaymentMethod
    amount: Float!
    status: PaymentStatus!
    createdAt: DateTime!
}

enum WithdrawStatus {
    WAIT_APPROVE,
    APPROVED,
    IN_PROGRESS,
    SUCCESS,
    CANCELLED,
    BAD_PURSE,
}

type Withdraw {
    id: ID!
    method: WithdrawMethod!
    amount: Float!
    status: WithdrawStatus!
    createdAt: DateTime!
}

type QiwiWithdrawStats {
    turnover: QiwiLimit
    restrictions: [String!]
    balance: Float
}

type QiwiLimit {
    type: String!
    currency: String!
    rest: Float!
    max: Float!
    spent: Float!
    interval: QiwiLimitInterval!
}

type QiwiLimitInterval {
    dateFrom: String!
    dateTill: String!
}

enum QiwiWithdrawMethod {
    Visa, YooMoney, Wmz, Qiwi
}

input QiwiWithdrawPurse {
    account: String!
    remName: String
    remNameF: String
    recAddress: String
    recCity: String
    recCountry: String
    regName: String
    regNameF: String
}
